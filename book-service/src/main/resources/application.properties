spring.application.name=book-service
server.port=8083

#rating.service.endpoint=http://${GATEWAY_SERVICE_HOST}:GATEWAY_SERVICE_PORT_HTTP/rating-service/ratings/search/findByBookId?bookId={bookId}
eureka.client.region = default
eureka.client.registryFetchIntervalSeconds = 5
eureka.client.serviceUrl.defaultZone=http://${EUREKA_SERVER_SERVICE_HOST}:${EUREKA_SERVER_SERVICE_PORT}/eureka/
eureka.instance.preferIpAddress=true

# H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
## Datasource
#spring.datasource.url=jdbc:h2:file:~/books
#spring.datasource.username=postgres
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.initialize=true
#spring.datasource.schema=classpath:schema.sql
#spring.datasource.data=classpath:data.sql

spring.jpa.database=POSTGRESQL 
spring.datasource.platform=postgres 
spring.jpa.show-sql=true 
spring.jpa.hibernate.ddl-auto=create-drop 
spring.database.driverClassName=org.postgresql.Driver 
spring.datasource.url=jdbc:postgresql://${DATABASE_SERVICE_HOST}:${DATABASE_SERVICE_PORT}/poc
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.initialize=true
spring.datasource.schema=classpath:schema.sql
spring.datasource.data=classpath:data.sql

spring.jpa.hibernate.ddl-auto=update
